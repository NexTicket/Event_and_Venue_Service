generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Tenant {
  id          Int      @id @default(autoincrement())
  name        String
  createdAt   DateTime @default(now())
  firebaseUid String?  @unique
  venues      Venue[]
  events      events[]
}

model Venue {
  id            Int      @id @default(autoincrement())
  name          String
  seatMap       Json
  tenantId      Int
  capacity      Int?
  location      String?
  image         String?
  ownerUid      String?
  description   String?
  featuredImage String?
  images        String[]
  tenant        Tenant   @relation(fields: [tenantId], references: [id])
  events        events[]
}

model events {
  id          Int         @id @default(autoincrement())
  tenantId    Int
  title       String
  description String
  category    String // Keep as String for now to preserve existing data
  type        String
  startDate   DateTime
  endDate     DateTime?
  startTime   String?
  endTime     String?
  created_at  DateTime?   @db.Timestamptz(6)
  status      EventStatus @default(PENDING)
  venueId     Int?
  image       String?
  Tenant      Tenant      @relation(fields: [tenantId], references: [id])
  venue       Venue?      @relation(fields: [venueId], references: [id])
}

enum EventStatus {
  PENDING
  APPROVED
  REJECTED
  CANCELLED
  COMPLETED
}

enum Category {
  MUSIC
  SPORTS
  THEATER
  COMEDY
  CONFERENCE
  FESTIVAL
  WORKSHOP
  OTHER
}


